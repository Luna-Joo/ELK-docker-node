version: '3'
services:
  app:
    container_name: nestjs_boilerplate
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - postgres
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    command: yarn start

  postgres:
    image: postgres
    container_name: postgres
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: 'UTC'
      PGTZ: 'UTC'
    ports:
      - '5432:5432'
    networks:
      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=elasticsearch,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl:enabled=false
      - xpack.security.transport.ssl:enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    depends_on:
      - postgres
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch,es03
      - cluster.initial_master_nodes=elasticsearch,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl:enabled=false
      - xpack.security.transport.ssl:enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elk
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch,es02
      - cluster.initial_master_nodes=elasticsearch,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl:enabled=false
      - xpack.security.transport.ssl:enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.1
    volumes:
      - type: bind
        source: ./logstash/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
      - type: bind
        source: ./logstash/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/postgresql-42.5.2.jar
        target: /usr/share/logstash/postgresql-42.5.2.jar
        read_only: true
    ports:
      - 5044:5044
    depends_on:
      - elasticsearch
      - app
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    networks:
      - elk
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

volumes:
  node_modules:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  logstash:

networks:
  elk:
